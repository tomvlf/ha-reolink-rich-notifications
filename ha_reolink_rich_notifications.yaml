blueprint:
  name: Reolink Rich Notifications + Chromecast TTS
  description: >
    Send Reolink rich notifications to Android devices and optionally announce on selected Chromecast speakers.
    
  domain: automation
  input:
    notify_device:
      name: Devices to Notify
      description: These mobile devices will receive a notification when alerts are triggered.
      default: []
      selector:
        device:
          integration: mobile_app
          multiple: true

    trigger_entities:
      name: Camera Trigger Entity
      description: These Reolink entities (e.g. binary sensors) will trigger this automation.
      selector:
        entity:
          multiple: false
          filter:
            - integration: reolink

    camera_entity:
      name: Snapshot Camera
      description: Choose the Reolink camera from which the image will be taken.
      selector:
        entity:
          domain: camera
          integration: reolink
          multiple: false

    cast_speakers:
      name: Chromecast Speakers
      description: Select one or more Cast media players to announce the message.
      default: []
      selector:
        entity:
          domain: media_player
          integration: cast
          multiple: true

    tts_engine:
      name: TTS Engine
      description: Select your TTS engine (e.g., tts.google_translate or tts.cloud).
      selector:
        entity:
          domain: tts

    tts_message:
      name: TTS Message
      description: which notification to be spoken on the selected speakers


    retrigger_delay:
      name: Retrigger Delay
      description: Time to wait before triggering the same camera again.
      default:
        hours: 0
        minutes: 0
        seconds: 20
      selector:
        duration:

mode: parallel
max: 100

variables:
  notify_device: !input notify_device
  trigger_entities: !input trigger_entities
  camera_entity: !input camera_entity
  cast_speakers: !input cast_speakers
  tts_engine: !input tts_engine
  tts_message: !input tts_message
  retrigger_delay: !input retrigger_delay
  image_file: "reolink_rich_notifications/{{ camera_entity }}_{{ now().timestamp() | int }}.jpg"

trigger:
  platform: state
  entity_id: !input trigger_entities
  from: "off"
  to: "on"

action:

# Optional: Announce on selected Chromecast speakers
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ (cast_speakers | default([])) | length > 0 }}"
        sequence:
          - repeat:
              for_each: "{{ cast_speakers }}"
              sequence:
                - service: tts.speak
                  target:
                    entity_id: !input tts_engine
                  data:
                    media_player_entity_id: "{{ repeat.item }}"
                    message: "{{ tts_message }}"
                    
  # Send initial notification (no image yet)
  - repeat:
      for_each: "{{ notify_device }}"
      sequence:
        - service: "notify.mobile_app_{{ device_attr(repeat.item, 'name') | slugify }}"
          data:
            title: "Visitor at the door"
            message: "Doorbell rang"
            data:
              tag: "Visitor at the door"
              ttl: 0
              priority: high
              url: "app://homeassistant"
              clickAction: "app://homeassistant"


  # Take snapshot using selected camera
  - service: camera.snapshot
    data:
      entity_id: "{{ camera_entity }}"
      filename: "/media/{{ image_file }}"

  # Send updated notification with image
  - repeat:
      for_each: "{{ notify_device }}"
      sequence:
        - service: "notify.mobile_app_{{ device_attr(repeat.item, 'name') | slugify }}"
          data:
            title: "Visitor at the door"
            message: "Doorbell rang"
            data:
              tag: "Visitor at the door"
              image: "/media/local/{{ image_file }}"
              ttl: 0
              priority: high
              url: "app://homeassistant"
              clickAction: "app://homeassistant"
